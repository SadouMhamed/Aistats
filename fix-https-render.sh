#!/bin/bash

# ðŸ”’ Script de correction HTTPS pour Render.com
# RÃ©sout le problÃ¨me Mixed Content en forÃ§ant HTTPS

echo "ðŸ”’ Correction du problÃ¨me HTTPS/Mixed Content sur Render..."

# 1. Clear Laravel caches
echo "ðŸ§¹ Nettoyage des caches Laravel..."
php artisan config:clear
php artisan route:clear
php artisan view:clear
php artisan cache:clear

# 2. Rebuild assets with HTTPS configuration
echo "ðŸ”¨ Reconstruction des assets avec configuration HTTPS..."
npm run build

# 3. Cache optimized configuration
echo "ðŸ’¾ Mise en cache de la configuration optimisÃ©e..."
php artisan config:cache
php artisan route:cache
php artisan view:cache

# 4. Test HTTPS locally in production mode
echo "ðŸ§ª Test HTTPS en mode production local..."
APP_ENV=production APP_URL=https://aistats.onrender.com php artisan config:cache

echo ""
echo "âœ… Correction HTTPS terminÃ©e!"
echo ""
echo "ðŸ”’ Changements appliquÃ©s:"
echo "   âœ… URLs forcÃ©es en HTTPS dans les layouts"
echo "   âœ… URL::forceScheme('https') ajoutÃ© au AppServiceProvider"
echo "   âœ… Fallbacks sÃ©curisÃ©s configurÃ©s"
echo ""
echo "ðŸ“‹ Prochaines Ã©tapes:"
echo "1. VÃ©rifiez dans votre dashboard Render que APP_URL est en HTTPS:"
echo "   APP_URL=https://aistats.onrender.com"
echo ""
echo "2. Poussez ces changements:"
echo "   git add ."
echo "   git commit -m 'Fix: RÃ©solution Mixed Content - Force HTTPS pour tous les assets'"
echo "   git push origin main"
echo ""
echo "3. AprÃ¨s redÃ©ploiement, vÃ©rifiez que ces URLs sont accessibles en HTTPS:"
echo "   https://aistats.onrender.com/build/assets/app-Dq_idYs2.css"
echo "   https://aistats.onrender.com/build/assets/app-DaBYqt0m.js"
echo ""
echo "ðŸŽ¯ Plus de Mixed Content - Votre CSS va maintenant s'afficher ! ðŸŽ¨" 